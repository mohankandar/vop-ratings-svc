# Global Server and Build Settings
# Learn: https://docs.spring.io/spring-boot/docs/current/reference/html/howto-properties-and-configuration.html#howto-use-yaml-for-external-properties
info:
  build:
    version:  "@project.version@"
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"
server:
  port: 8080
  max-http-header-size: 65536
---
spring.profiles: default
spring.profiles.include: remote_client_sims, embedded-redis
bip-ratings-svc:
  ribbon:
    listOfServers: localhost:${server.port}
---
spring.profiles: local-int, ci, dev, stage, prod
spring.profiles.include: remote_client_sims
---
spring.profiles: local-int, ci, dev
spring.profiles.include: embedded-redis
---
spring.profiles: local-int, ci
bip.framework.security.opa:
  enabled: false # OPAEnablement: Set this to true if you want to enable OPA
---
spring.profiles: local-int
bip.framework.security.opa:
  urls:
  - http://opa:8181/v1/data/bip/http/authz/admin
  - http://opa:8181/v1/data/bip/http/authz/allow
  allVotersAbstainGrantAccess: false
---
spring:
  cache:
    type: redis
  config.use-legacy-processing: true
  # Properties for org.springframework.boot.autoconfigure.data.redis.RedisProperties
  redis:
    ssl: false
    host: localhost
    port: 6379
    # password:    # If host takes a password
    # url:         # URL overrides host/port/password
    # database: 0  # The database index to use
    # timeout:     # Connection timeout (millis)
    # Jedis is activated by being on the classpath
    jedis:
      # At least one variable *must* be set in order to enable the pool
      pool:
        # max-idle: 8   # Max number of idle connections in the pool
        # min-idle: 0   # Min number of idle connections to maintain
        # max-active: 8 # Max number of allocated connections (-1 for unlimited)
        max-wait: -1    # Max wait millis when pool is exhausted (-1 for unlimited)
    # cluster:
      # max-redirects: # Maximum number of redirects to follow when executing commands across the cluster
      # nodes:         # Comma-separated list of "host:port" pairs to bootstrap from
    # sentinel:
      # master:  # Name of the Redis server
      # nodes:   # Comma-separated list of "host:port" pairs
  sleuth:
    stream:
      enabled: false
  cloud:
    bus:
      enabled: false
    discovery:
      client:
        composite-indicator:
          enabled: false
  security:
    basic:
      enabled: false
    user:
      name: ${bip.framework.security.username:admin}
      password: ${bip.framework.security.password:default}
  # spring jackson mapper, serialization and deserialization global settings
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss
    serialization-inclusion: NON_EMPTY
    default-property-inclusion: NON_EMPTY
    serialization:
      indent_output: true
      write-dates-as-timestamps: false
    deserialization:
      FAIL_ON_IGNORED_PROPERTIES: false
      FAIL_ON_UNKNOWN_PROPERTIES: false
  liquibase.enabled: false

# service.context: http://localhost:8080

#management.endpoints.enabled-by-default: true
# expose all endpoints:
management.endpoints.web.exposure.include: "*"
# disable beans endpoint
management.endpoint.beans.enabled: false
management.endpoint.health.show-details: "ALWAYS"
management:
  health:
    consul:
      enabled: false
    vault:
      enabled: false
    db:
      enabled: false
    diskspace:
      enabled: true
    refresh:
      enabled: true
    ratelimiters:
      enabled: false
    circuitbreakers:
      enabled: false
    hystrix:
      enabled: false
    rabbit:
      enabled: false
    redis:
      enabled: false
#Application Custom Properties
bip-ratings-svc:
  propSource: internal
  password: secret
  sampleProperty: >
                  sampleProperty___env/profile:${bip-ratings-svc.env}___propSource:
                  ${bip-ratings-svc.propSource}__password:${bip-ratings-svc.password}
#-##################################################
# Logging Level for packages
#-##################################################
logging:
  level:
    com.ecwid.consul: WARN
    feign: WARN
    # Add partner logging here, example:
    #com.wynd.vop.ratingssvc.[partner-name].client: INFO
#     com.wynd.vop.ratingssvc: DEBUG
    com.wynd.vop.framework.audit: DEBUG
    # Change Value to DEBUG to log all application logs
    com.wynd.vop.ratingssvc: INFO
    # Change Value to DEBUG to log all VOP framework logs
    com.wynd.vop.framework: INFO
#    org.apache.http: DEBUG
    org.apache.coyote: DEBUG
    org.apache.http.impl.client: WARN
    org.apache.tomcat.util.buf: DEBUG
#    org.springframework: DEBUG
    org.springframework.cache: WARN
    org.springframework.client.discovery: WARN
    org.springframework.cloud.consul: WARN
    org.springframework.cloud.openfeign: WARN
    org.springframework.cloud.sleuth: WARN
    org.springframework.core.convert: WARN
    org.springframework.format: WARN
    org.springframework.retry: WARN
    org.springframework.security: DEBUG
    org.springframework.security.web: WARN
    org.springframework.web: DEBUG
    org.springframework.web.client: WARN
    org.springframework.ws: WARN
    sun.net.www.protocol: WARN
##################################################
# Ribbon timeout, server refresh interval, retry
# settings for the requests
##################################################
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 5000
  ServerListRefreshInterval: 10000
  MaxAutoRetries: 2
  MaxAutoRetriesNextServer: 2
  OkToRetryOnAllOperations: true
##################################################
# Disable hystrix for feign. Enable it if fallback
# needs to be implemented
##################################################
feign.hystrix.enabled: true
##################################################
# hystrix command settings
##################################################
hystrix:
  # set the hystrix.shareSecurityContext property to true. Doing so will auto configure an Hystrix concurrency strategy
  # plugin hook who will transfer the SecurityContext from your main thread to the one used by the Hystrix command
 shareSecurityContext: true
 # set the hystrix.wrappers.enabled property to true. Doing so will auto configure an Hystrix concurrency strategy
 # plugin hook who will transfer the RequestContextHolder from your main thread to the one used by the Hystrix command
 # CUSTOM property used conditionally to register bean and HystrixPlugins concurrency strategy
 wrappers.enabled: true
 command:
  default:
    metrics:
      rollingStats:
        # This property sets the duration of the statistical rolling window, in milliseconds.
        # This is how long Hystrix keeps metrics for the circuit breaker to use and for publishing
        # Default Value: 10000
        timeInMilliseconds: 20000
      # This property sets the time to wait, in milliseconds, between allowing health snapshots to be taken that calculate
      # success and error percentages and affect circuit breaker status.
      # Default Value: 500
      healthSnapshot:
        intervalInMilliseconds: 1000
    circuitBreaker:
      # This property sets the amount of time, after tripping the circuit, to reject requests
      # before allowing attempts again to determine if the circuit should again be closed.
      # Default Value: 5000
      sleepWindowInMilliseconds: 5000
      # This property sets the minimum number of requests in a rolling window that will trip the circuit.
      # Default Value: 20
      requestVolumeThreshold: 20
    execution:
      isolation:
        # strategy: SEMAPHORE
        thread:
          # This property sets the time in milliseconds after which the caller will observe a timeout and
          # walk away from the command execution. Hystrix marks the HystrixCommand as a TIMEOUT, and performs fallback
          # logic. Note that there is configuration for turning off timeouts per-command, if that is desired (see command.timeout.enabled).
          # Default Value: 1000
          timeoutInMilliseconds: 20000
###############################################################################
#Property configuration to enable or disable JWT security for the service calls
#JWT security is enabled by default. So to disable it you have to
#set the environment system property bip.ratingssvc.security.jwt.enabled=false
###############################################################################
bip.framework:
  security:
    jwt:
      enabled: true
      filterProcessUrls:
        - /api/v1/ratingssvc/**
        - /api/v2/ratingssvc/**
      excludeUrls:
        - /api/v1/token
        - /*
  swagger:
    # enable/disable the swagger/openapi UI ...
    enabled: true

##################################################
# Feign or REST client connection timeout
# when making inter-service or external REST calls
##################################################
  rest:
    client:
      connectionTimeout: 30000
      readTimeout: 60000
      maxTotalPool: 5
      defaultMaxPerRoutePool: 10
      validateAfterInactivityPool: 10000
      connectionBufferSize: 4128
##################################################
# Cache
##################################################
  cache:
    defaultExpires: 86400 # (Seconds)
    expires:
#     -
#       name: Cache Name
#       ttl:  TTL (In Seconds)
      -
        name: ratingssvcService_@project.name@_@project.version@
        ttl: 1800
##################################################
# Sleuth configuration
# To skip specific patterns being exported, added few more customs on top of default skip pattern
# see org.springframework.cloud.sleuth.instrument.web.TraceFilter.DEFAULT_SKIP_PATTERN
##################################################
spring.sleuth.web.skipPattern: (/api/.*/webjars.*|/api/.*/v2/api-docs.*|/api/.*/swagger-resources.*|/api/.*/swagger-ui.*|/api-docs.*|/autoconfig|/configprops|/dump|/health|/info|/metrics.*|/mappings|/trace|/swagger.*|.*\\.png|.*\\.css|.*\\.js|.*\\.html|/favicon.ico|/hystrix.stream)
# comma separated list of matchers
spring.sleuth.rxjava.schedulers.ignoredthreads: HystixMetricPoller,^RxComputation.*$,^RxIoScheduler.*$


