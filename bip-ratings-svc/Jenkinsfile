mavenGitflowPipeline {

    useJDK11 = true

    /*************************************************************************
    * Docker Build Configuration
    *************************************************************************/

    // Map of Image Names to sub-directory in the repository. If this is value is non-empty, 
    // the build pipeline will build all images specified in the map. The example below will build an image tagged as 
    // `vbms-ratings/bip-ratings-svc:latest` using the Docker context of `./bip-ratings-svc`.
    dockerBuilds = [
        'vbms-ratings/bip-ratings-svc': 'bip-ratings-svc'
    ]

    // Will include the git branch name in the tag of promoted images when true.
    useBranchNameTag = true

    /*************************************************************************
    * Functional Testing Configuration
    *************************************************************************/
    
    //Directory that contains the cucumber reports
    cucumberReportDirectory = "bip-ratings-svc/target/site"

    //Additional Maven options to use when running functional test cases. By default, security policy tests are
    // ignored, but when OPA is enabled, the subsequent line overrides the cucumberOpts to allow them to be included.
    cucumberOpts = "--tags @DEV --tags ~@securitypolicy"

    // OPAEnablement cucumberOpts = "--tags @DEV"

    /* Postman Testing Configuration */
   
   // Set of Postman test collections to execute. Required for Postman Testing stage to run.
   postmanTestCollections = [
     'bip-ratings-svc/src/inttest/resources/bip-ratings-svc.postman_collection.json'
   ]

   // Only run specified folder from collection. Optional. Runs all tests in collection if not specified
   // postmanFolder = 'token'

   // Environment File. Optional
   // postmanEnvironment = 'bip-ratings-svc/src/inttest/resources/bip-ratings-svc-test.postman_environment.json'

   // Globals File. Optional.
   // postmanGlobals = 'bip-ratings-svc/src/inttest/resources/bip-ratings-svc.postman_globals.json'

   // Data File. Optional.
   // postmanData = 'bip-ratings-svc/src/inttest/resources/bip-ratings-svc.postman_data.csv'

   // Number of Iterations to run tests. Optional.
   // postmanIterationCount = 3

    /*************************************************************************
    * Helm Deployment Configuration
    *
    * This section only applied to builds running on the Kubernetes platform.
    * This section should be omitted if you are using Openshift templates for
    * deployment on Openshift.
    *************************************************************************/

    //Git Repository that contains your Helm chart
    chartRepository = "https://github.com/wynd/bip-vbms-ratings-config"

    //Git branch to obtain Helm chart from
    chartBranch = "development"

    //Path to your chart directory within the above repository
    chartPath = "charts/bip-ratings-svc"

    //Jenkins credential ID to use when connecting to repository. This defaults to `github` if not specified
    chartCredentialId = "github"

    //Value YAML file used to configure the Helm deployments used for functional and performance testing.
    chartValueFunctionalTestFile = "testing.yaml"
    chartValuePerformanceTestFile = "testing.yaml"

    //Value YAML file used to configure the Helm deployments used for the Deploy Review Instance stage
    chartValueReviewInstanceFile = "reviewInstance.yaml"

    //Release name to use
    chartReleaseName = "bip-ratings-svc"

    /*************************************************************************
     * Fortify Configuration
     *************************************************************************/
    //Specifies the maximum amount of memory Fortify Static Code Analyzer uses. Values can be M or G (ex. 1G).
    //fortifyMaxHeap = "1G"

    //Specifies the thread stack size of JVM which runs SCA.
    //fortifyThreadSize = "8M"

    //List of properties to add to fortify-sca.properties file.
    //fortifyScaProps = [
    //        "com.fortify.sca.MultithreadedAnalysis = true",
    //        "com.fortify.sca.ThreadCount = 2"
    //]

    /*************************************************************************
     * OWASP Maven Dependency Check Configuration
     *************************************************************************/
    //Determines if the OWASP Dependency Check stage is executed. Defaults to true.
    skipOwasp = true

    //Determines which plugin to use for OWASP Dependency Check. Valid values are "maven" and "jenkins".
    owaspPlugin = "jenkins"

    //Determines vulnerability threshold. If number of vulnerabilities of specified severity exceed this threshold, the pipeline build will be marked as unstable.
    unstableTotalCritical = 1
    unstableTotalHigh = 1
    unstableTotalMedium = 1
    unstableTotalLow = 1

    //Determines vulnerability threshold. If number of vulnerabilities of specified severity exceed this threshold, the pipeline build will fail.
    //failedTotalCritical = 1
    //failedTotalHigh = 1
    //failedTotalMedium = 1
    //failedTotalLow = 1

    //String for defining Dependency Check command line arguments. See Dependency-Check-CLI documentation (https://jeremylong.github.io/DependencyCheck/dependency-check-cli/arguments.html) for a table of supported command line arguments.
    //owaspArgs = "--suppression ./owasp-suppression.xml"
}
